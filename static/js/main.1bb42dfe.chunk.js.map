{"version":3,"sources":["slice/images.js","store.js","components/searchBar.js","components/imageGallery.js","components/home.js","components/uploader.js","index.js","components/utils.js","images/upload.svg","images/mic.svg"],"names":["imagesSlice","createSlice","name","initialState","data","reducers","updateImage","state","action","payload","actions","configureStore","reducer","images","imagesReducer","SearchBar","_useState","useState","_useState2","Object","slicedToArray","searchVal","setSearchVal","_useState3","_useState4","isRecording","setIsRecording","_start","asyncToGenerator","_regeneratorRuntime","mark","_callee2","micStream","audioStream","command","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","event","_iterator3","_step3","result","noOfResults","sent","i","outPut","wrap","_context2","prev","next","MicrophoneStream","t0","window","navigator","mediaDevices","getUserMedia","video","audio","t1","setStream","call","_ref","wrapAsyncGenerator","_callee","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","chunk","_context","_asyncIterator","awaitAsyncGenerator","done","value","AudioEvent","AudioChunk","pcmEncodeChunk","return","finish","stop","apply","this","arguments","StartStreamTranscriptionCommand","LanguageCode","MediaEncoding","MediaSampleRateHertz","AudioStream","transcribeClient","send","console","log","TranscriptResultStream","_createForOfIteratorHelper","TranscriptEvent","Transcript","Results","s","n","IsPartial","Alternatives","Items","length","Content","includes","document","getElementById","focus","abrupt","t2","e","f","t3","t4","dispatch","useDispatch","react_default","a","createElement","className","id","placeholder","onKeyDown","key","axios","get","process","concat","then","JSON","parse","body","catch","error","onChange","target","onClick","location","reload","alt","src","mic","react_router_dom","to","upload","Gallery","useSelector","photos","toConsumableArray","Map","map","item","values","image","url","width","height","labels","index_esm","layout","padding","renderPhoto","props","photo","imageProps","assign","join","Home","searchBar","imageGallery","Uploader","file","updateFile","fileDragHover","fileDrag","stopPropagation","preventDefault","classNameName","type","fileSelectHandler","files","dataTransfer","accept","htmlFor","onDrop","onDragOver","onDragLeave","Blob","URL","createObjectURL","encodeURI","aria-hidden","reader","FileReader","onload","tagsInput","split","config","headers","x-amz-meta-customLabels","Content-Type","params","Date","getTime","put","innerHTML","readAsDataURL","ReactDOM","createRoot","render","es","store","react_router","path","element","home","components_uploader","Buffer","__webpack_require__","d","__webpack_exports__","_aws_sdk_client_cognito_identity__WEBPACK_IMPORTED_MODULE_0__","_aws_sdk_credential_provider_cognito_identity__WEBPACK_IMPORTED_MODULE_1__","_aws_sdk_client_transcribe_streaming__WEBPACK_IMPORTED_MODULE_2__","microphone_stream__WEBPACK_IMPORTED_MODULE_3__","microphone_stream__WEBPACK_IMPORTED_MODULE_3___default","TranscribeStreamingClient","region","credentials","fromCognitoIdentityPool","client","CognitoIdentityClient","identityPoolId","input","toRaw","offset","buffer","ArrayBuffer","view","DataView","Math","max","min","setInt16","from","module","exports","p"],"mappings":"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","file":"static/js/main.1bb42dfe.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst imagesSlice = createSlice({\r\n    name: 'images',\r\n    initialState: {\r\n        data: []\r\n    },\r\n    reducers: {\r\n        updateImage: (state, action) => {\r\n            state.data = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { updateImage } = imagesSlice.actions\r\nexport default imagesSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport imagesReducer from './slice/images';\r\n\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        'images': imagesReducer\r\n    },\r\n})","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { updateImage } from '../slice/images'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from \"react-router-dom\"\r\nimport upload from '../images/upload.svg'\r\nimport mic from '../images/mic.svg'\r\nimport '../css/searchbar.css'\r\nimport { StartStreamTranscriptionCommand } from \"@aws-sdk/client-transcribe-streaming\";\r\nimport MicrophoneStream from \"microphone-stream\";\r\nimport { transcribeClient, pcmEncodeChunk } from './utils'\r\n\r\nconst SearchBar = () => {\r\n    const [searchVal, setSearchVal] = useState('')\r\n    const [isRecording, setIsRecording] = useState(false)\r\n    // var micStream;\r\n    async function start() {\r\n        setSearchVal('')\r\n        setIsRecording(true)\r\n        try {\r\n            // Start the browser microphone.\r\n            const micStream = new MicrophoneStream();\r\n            micStream.setStream(\r\n                await window.navigator.mediaDevices.getUserMedia({\r\n                    video: false,\r\n                    audio: true,\r\n                })\r\n            );\r\n            // Acquire the microphone audio stream.\r\n            const audioStream = async function* () {\r\n                for await (const chunk of micStream) {\r\n                    yield {\r\n                        AudioEvent: {\r\n                            AudioChunk: pcmEncodeChunk(\r\n                                chunk\r\n                            ) /* pcm Encoding is optional depending on the source. */,\r\n                        },\r\n                    };\r\n                }\r\n            };\r\n\r\n            const command = new StartStreamTranscriptionCommand({\r\n                // The language code for the input audio. Valid values are en-GB, en-US, es-US, fr-CA, and fr-FR.\r\n                LanguageCode: \"en-US\",\r\n                // The encoding used for the input audio. The only valid value is pcm.\r\n                MediaEncoding: \"pcm\",\r\n                // The sample rate of the input audio in Hertz.\r\n                MediaSampleRateHertz: 44100,\r\n                AudioStream: audioStream(),\r\n            });\r\n\r\n            // Send the speech stream to Amazon Transcribe.\r\n            const data = await transcribeClient.send(command);\r\n            console.log(\"Success\", data.TranscriptResultStream);\r\n            // return data; //For unit tests only.\r\n            for await (const event of data.TranscriptResultStream) {\r\n                for (const result of event.TranscriptEvent.Transcript.Results || []) {\r\n                    if (result.IsPartial === false) {\r\n                        const noOfResults = result.Alternatives[0].Items.length;\r\n                        // Print results to browser window.\r\n                        var sent = ''\r\n                        for (let i = 0; i < noOfResults; i++) {\r\n                            const outPut = result.Alternatives[0].Items[i].Content;\r\n                            if (![\".\", \",\", \":\", \"!\", \"?\"].includes(outPut))\r\n                                sent += outPut + ' '\r\n                        }\r\n                        console.log(sent)\r\n                        setSearchVal(sent)\r\n                        micStream.stop()\r\n                        setIsRecording(false)\r\n                        document.getElementById('searchbar').focus()\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            console.log(\"Success. \", data);\r\n        } catch (err) {\r\n            console.log(\"Error. \", err);\r\n        }\r\n    }\r\n    function stop() {\r\n        setIsRecording(false)\r\n        window.location.reload();\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    function handleSearch(e) {\r\n        if (e.key === 'Enter') {\r\n            let value = document.getElementById('searchbar').value\r\n            var url = process.env.REACT_APP_BASE_API + '/search'\r\n            axios.get(url + `?q=${value}`, null, null)\r\n                .then(data => {\r\n                    data = JSON.parse(data.data.body)\r\n                    console.log(data)\r\n                    dispatch(updateImage(data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <center>\r\n            <div className=\"bar\">\r\n                <input id=\"searchbar\" placeholder=\"show me ...\" onKeyDown={handleSearch}\r\n                    value={searchVal} onChange={e => setSearchVal(e.target.value)} />\r\n                {isRecording\r\n                    ? <div className=\"recording-circle\" onClick={stop} />\r\n                    : <img className=\"voice\" alt='voice-btn' src={mic} onClick={start} />\r\n                }\r\n                <Link to=\"/upload\"><img className=\"upload\" alt='upload-btn' src={upload} /></Link>\r\n            </div>\r\n        </center>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBar","import { useSelector } from \"react-redux/es/exports\";\r\nimport React from \"react\";\r\nimport PhotoAlbum from \"react-photo-album\";\r\n\r\n\r\nconst Gallery = () => {\r\n    const images = useSelector(state => state.images.data)\r\n    const uniqueImages = [...new Map(images.map(item =>\r\n        [item['url'], item])).values()];\r\n    const photos = uniqueImages.map(image => ({\r\n        src: image.url,\r\n        width: image.width,\r\n        height: image.height,\r\n        labels: image.labels\r\n    }))\r\n    function renderPhoto(props) {\r\n        const { photo, imageProps } = props\r\n        return (\r\n            <div className=\"container\" width={photo.width} height={photo.height}>\r\n                <img className=\"gallery-image\" alt='' {...imageProps} />\r\n                <div className=\"middle\">\r\n                    <div className=\"text\">{photo.labels.join(' ')}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <p>{images.length === 0 ? \"No search Result\" : null}</p>\r\n            <PhotoAlbum\r\n                layout=\"masonry\"\r\n                photos={photos}\r\n                padding={3}\r\n                renderPhoto={renderPhoto}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Gallery","import React from \"react\";\nimport SearchBar from './searchBar'\nimport Gallery from \"./imageGallery\";\n\nfunction Home() {\n    return (\n        <div>\n            <SearchBar />\n            <Gallery />\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { useState } from 'react'\r\nimport '../css/uploader.css'\r\nimport axios from 'axios'\r\n\r\nconst Uploader = () => {\r\n    const [file, updateFile] = useState(null)\r\n    function fileDragHover(e) {\r\n        var fileDrag = document.getElementById('file-drag');\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        fileDrag.classNameName = (e.type === 'dragover' ? 'hover' : 'modal-body file-upload');\r\n    }\r\n    function fileSelectHandler(e) {\r\n        var files = e.target.files || e.dataTransfer.files;\r\n        fileDragHover(e);\r\n        updateFile(files[0])\r\n    }\r\n\r\n    function uploadFile(e) {\r\n        if (file instanceof Blob === false)\r\n            return\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            var tagsInput = document.getElementById('tags-upload')\r\n            var url = process.env.REACT_APP_BASE_API + '/upload'\r\n            var data = reader.result.split(',')[1]\r\n            var config = {\r\n                headers: {\r\n                    'x-amz-meta-customLabels': tagsInput.value,\r\n                    'Content-Type': 'image/jpg;base64',\r\n                },\r\n                params: {\r\n                    'key': new Date().getTime() + file.name.split(\".\")[1],\r\n                }\r\n            }\r\n            axios.put(url, data, config)\r\n                .then(data => {\r\n                    updateFile(null)\r\n                    tagsInput.value = ''\r\n                    document.getElementById('upload-response').innerHTML = \"Upload Success\"\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    document.getElementById('upload-response').innerHTML = \"Upload Error\"\r\n                })\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    return (\r\n        <form id=\"file-upload-form\" className=\"uploader\">\r\n            <input id=\"file-upload\" type=\"file\" name=\"fileUpload\" accept=\".png,.jpg,.jpeg\"\r\n                onChange={fileSelectHandler} />\r\n            <label htmlFor=\"file-upload\" id=\"file-drag\" onDrop={fileSelectHandler}\r\n                onDragOver={fileDragHover} onDragLeave={fileDragHover} >\r\n                {\r\n                    file instanceof Blob\r\n                        ? <div>\r\n                            <img id=\"file-image\" src={URL.createObjectURL(file)} alt=\"Preview\" />\r\n                            <div id=\"response\">\r\n                                <div id=\"messages\">\r\n                                    <strong>{encodeURI(file.name)}</strong>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : <div id=\"start\">\r\n                            <i className=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n                            <div>Select a file or drag here</div>\r\n                        </div>\r\n                }\r\n            </label>\r\n            <span>Tags: </span>\r\n            <input id=\"tags-upload\" className=\"tag-input hidden\" placeholder=\"split with comma\" />\r\n            <span id=\"submit-button\" className=\"btn btn-primary\" onClick={uploadFile}>Submit</span>\r\n            <span id=\"upload-response\"></span>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Uploader","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport {\n    BrowserRouter,\n    Routes,\n    Route,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport Home from './components/home'\nimport Uploader from './components/uploader'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"upload\" element={<Uploader />} />\n            </Routes>\n        </BrowserRouter>\n    </Provider>\n)","import { CognitoIdentityClient } from \"@aws-sdk/client-cognito-identity\";\r\nimport { fromCognitoIdentityPool } from \"@aws-sdk/credential-provider-cognito-identity\";\r\nimport { TranscribeStreamingClient } from \"@aws-sdk/client-transcribe-streaming\";\r\nimport MicrophoneStream from \"microphone-stream\";\r\n\r\nconst REGION = \"us-east-1\";\r\nconst IDENTITY_POOL_ID = \"us-east-1:9cbf77a0-ced4-4a79-97db-3ea72108a7d7\"; // An Amazon Cognito Identity Pool ID.\r\n\r\n// Create an Amazon Transcribe service client object.\r\nexport const transcribeClient = new TranscribeStreamingClient({\r\n    region: REGION,\r\n    credentials: fromCognitoIdentityPool({\r\n        client: new CognitoIdentityClient({ region: REGION }),\r\n        identityPoolId: IDENTITY_POOL_ID,\r\n    }),\r\n});\r\n\r\nexport const pcmEncodeChunk = (chunk) => {\r\n    const input = MicrophoneStream.toRaw(chunk);\r\n    var offset = 0;\r\n    var buffer = new ArrayBuffer(input.length * 2);\r\n    var view = new DataView(buffer);\r\n    for (var i = 0; i < input.length; i++, offset += 2) {\r\n        var s = Math.max(-1, Math.min(1, input[i]));\r\n        view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\r\n    }\r\n    return Buffer.from(buffer);\r\n};","module.exports = __webpack_public_path__ + \"static/media/upload.355d0039.svg\";","module.exports = __webpack_public_path__ + \"static/media/mic.df8e597c.svg\";"],"sourceRoot":""}